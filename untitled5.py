# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1khPe3p26Jv22yKuRSxv_jvIXwqYLXllk
"""

import pandas as pd
import numpy as py
df = pd.read_csv('house_hold.csv')

#water usage for one year
df

#water usage for one month
df1=df[df['Month']==1]
df1

df1.head()

#checking is null values is there are not ->to clean the data
df1.isnull()

df1=df1.drop(columns=["Total_Usage(L)"])
df1

df1.isnull().sum()

#fill the null values
df1= df1.fillna(df1.mean(numeric_only=True))
df1

#add the total_usage coloumn
df1["total_usage"] = df1["Bathing(L)"] + df1["Cooking(L)"] + df1["Washing(L)"] + df1["Gardening(L)"] + df1["Drinking(L)"]
df1

df1.info()

df1.describe()

import matplotlib.pyplot as plt
import seaborn as sns

#Total water usage for every houshold that represent in bar chat
plt.figure(figsize=(10,6))
sns.barplot(x="Household", y="total_usage", data=df1)
plt.xticks(rotation=45)
plt.title("Total Water Usage per Household")
plt.show()

#Total water usage for every houshold that represent in pie chart
plt.figure(figsize=(8,8))
plt.pie( df1["total_usage"],labels=df1["Household"],autopct='%1.1f%%',startangle=140,shadow=True)
plt.title("Total Water Usage per Household")
plt.show()

plt.figure(figsize=(8,5))
sns.lineplot(x="Household", y="total_usage", data=df1, marker="o")
plt.xticks(rotation=45)
plt.title("Monthly Water Usage Trend")
plt.show()

#Average Water usage for every activity
activity_cols = ['Bathing(L)','Cooking(L)','Washing(L)','Gardening(L)','Drinking(L)']
df1[activity_cols].mean().plot(kind="pie", figsize=(8,5),autopct='%1.1f%%')
plt.title("Average Water Usage by Activity")
plt.ylabel("Liters")
plt.show()

#Data Normalization
from sklearn.preprocessing import MinMaxScaler, StandardScaler
activity_cols = ['Bathing(L)','Cooking(L)','Washing(L)','Gardening(L)','Drinking(L)','total_usage']
minmax_scaler = MinMaxScaler()
df_minmax = df1.copy()
df_minmax[activity_cols] = minmax_scaler.fit_transform(df1[activity_cols])
print("Min-Max Normalized Data:")
print(df_minmax)
standard_scaler = StandardScaler()
df_standard = df1.copy()
df_standard[activity_cols] = standard_scaler.fit_transform(df1[activity_cols])
print("\nStandardized Data:")
print(df_standard)

